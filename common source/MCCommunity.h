/*	Matthew Kosnik: mkosnik@uchicago.edu**	This file is copyright (C) 2001 Peter J. Wagner & Matthew Kosnik**	This program is free software; you can redistribute it and/or modify it *	under the terms of version 2 the GNU General Public License as published *	by the Free Software Foundation.**	This program is distributed in the hope that it will be useful, but WITHOUT*	ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or *	FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for *	more details.**	To view a copy of the license go to:*	http://www.fsf.org/copyleft/gpl.html*	To receive a copy of the GNU General Public License write the Free Software* 	Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.**	Copies of this source code are available without cost from:*	http://geosci.uchicago.edu/paleo/csource/*	* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *//***********************************************************************v0.0 	2001.05.04 BY P.J.WAGNER III            CODE WRITTEN - CODEWARRIOR 6.1 / MacOS 9.04v0.1	2001.05.04 BY M. KOSNIK            FUNCTIONS MADE USING WAGNER'S CODE            VARIABLE NAMES CHANGED TO MAKE THEM MORE UNDERSTANDABLE            COMMENTS ADDEDv0.2	2001.07.30 BY M. KOSNIK            ADDITIONAL COMMENTS...            REMOVAL OF UNUSED CODE....            FILE REORGANIZATION....            CLEANED SYNTAX TO COMPILE WITH PROJECT BUILDER IN OS X            Apple Computer, Inc. version gcc-926, based on gcc version 2.95.2 19991024 (release)v0.3	2001.09.03 BY M. KOSNIK            ADDITIONAL COMMENTS...            REMOVAL OF UNUSED CODE....            CREATED double *ranks_w_ties(int *abundance, int num_taxa);            FIXED:            	- random number call bugs            	- array overflow errors linked to while() loops***********************************************************************/#ifdef MCCommunity	#include <math.h>	#include <float.h>    #include <stdlib.h>    #include <stdio.h>	#include <time.h>	#include "memory.h"	#include "sort.h"		int *sim_geo(double E, long double min, int N);	int *sim_geos(double E, int S, int N);	int *sim_zsm(double TH, double M, int S, int N);	int *sim_zpf(double E, int S, int N);	int *sim_zfm(double E, double B, int S, int N);	int *sim_lgn(double E, double T, int S, int N);	int *sim_lp(double C, double X, int S, int N);	int *sim_community(double *rad, int S, int N);#else	extern int *sim_geo(double E, long double min, int N);	extern int *sim_geos(double E, int S, int N);	extern int *sim_zsm(double TH, double M, int S, int N);	extern int *sim_zpf(double E, int S, int N);    extern int *sim_zsm(double E, double B, int S, int N);	extern int *sim_lgn(double E, double T, int S, int N);	extern int *sim_lp(double C, double X, int S, int N);    extern int *sim_community(double *rad, int S, int N);#endif