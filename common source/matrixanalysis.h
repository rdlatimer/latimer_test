#define MAXRAND			32767/*******************************************************************************	Routines to extract information from arrays and matrices********************************************************************************/#ifdef matrixanalysis	#include <stdlib.h>	#include <stdio.h>	#include <time.h>	#include <math.h>	#include <string.h>	double **gowertrans(double **m, int n);	double dvectoraver(double *v, int n);	double dmatrixaver(double **m, int r, int c);	double *sumdvectors(double *i, double *j, double *k, int n);	int	*sumivectors(int *i, int *j, int *k, int n);	void *adddvectors(double *i, double *j, int N);	double sumdvector(double *i, int n);	int	sumivector(int *i, int n);	long sumlvector(long *i, int n);	unsigned long sumulvector(unsigned long *i, int n);		long sumlmatrixcol(long **i, int r, int c);	unsigned long sumulmatrixcol(unsigned long **i, int r, int c);	int	countivector(int *i, int n);	double darraytotal(double *d, int n);	int iarraytotal(int *i, int n);	long larraytotal(long *l, int n);	int countentryivector(int *v, int n);	int charraydifferences(long *sp1, long *sp2, int nchars, int unknown, int inap);	int charraycomparable(long *sp1, long *sp2, int nchars, int unknown, int inap);	long *ilhistogram(int *v, int n);	long *llhistogram(long *v, int n);	unsigned long *uihistogram(int *v, int n);	unsigned long *ulhistogram(long *v, int n);	double *idhistogram(int *v, int n);	double *idhistogramfull(int *v, int n, int k);	double *ldhistogram(long *v, int n);//	double **allstepslikelihoodcomp(long **matrix, int *ctype, int *nstates, int nchars, int notu, int empcomp, int comptype, int out, int fossils, double *mbl, int *bias, int *maxd, int pars, int debug, int unknown, int inap);	long **codedcombinations (long **matrix, int notu, int nchar, int miss, int gap);	int maxduplicates(long **matrix, int notu, int nchar);	int countunique(long **matrix, int notu, int nchar);	int countuniquechars(long **matrix, int notu, int nchars);	int *countcharreplicates(long **matrix, int notu, int nchar, int annchar);	int countuniqueulvector(unsigned long *, int);		double avedvector(double *v, int n);		void **multiplydmatrix(double **A, double **B, double **C, int r, int c);	double **mexp(double **Q, int k);	double *rankivector_dec(int *v, int n);	double *rankulvector_dec(unsigned long *v, int n);	double *rankdvector_dec(double *v, int n);	double *rankielements_dec(int *v, int n);	double *rankulelements_dec(unsigned long *v, int n);	double *rankdelements_dec(double *v, int n);#else	double **gowertrans(double **m, int n);	extern double dvectoraver(double *v, int n);	extern void *adddvectors(double *i, double *j, int N);	extern double *sumdvectors(double *i, double *j, double *k, int n);	extern int	*sumivectors(int *i, int *j, int *k, int n);	extern double sumdvector(double *i, int n);	extern int	sumivector(int *i, int n);	extern long sumlvector(long *i, int n);	extern unsigned long sumulvector(unsigned long *i, int n);		extern long sumlmatrixcol(long **i, int r, int c);	extern unsigned long sumulmatrixcol(unsigned long **i, int r, int c);	extern int	countivector(int *i, int n);	extern double darraytotal(double *d, int n);	extern int iarraytotal(int *i, int n);	extern long larraytotal(long *l, int n);	extern int countentryivector(int *v, int n);	extern int charraydifferences(long *sp1, long *sp2, int nchars, int unknown, int inap);	extern int charraycomparable(long *sp1, long *sp2, int nchars, int unknown, int inap);	extern long *ilhistogram(int *v, int n);	extern long *llhistogram(long *v, int n);	extern unsigned long *uihistogram(int *v, int n);	extern unsigned long *ulhistogram(long *v, int n);	extern double *idhistogram(int *v, int n);	extern double *idhistogramfull(int *v, int n, int k);	extern double *ldhistogram(long *v, int n);//	extern double **allstepslikelihoodcomp(long **matrix, int *ctype, int *nstates, int nchars, int notu, int empcomp, int comptype, int out, int fossils, double *mbl, int *bias, int *maxd, int pars, int debug, int unknown, int inap);	extern long **codedcombinations (long **matrix, int notu, int nchar, int miss, int gap);	extern int maxduplicates(long **matrix, int notu, int nchar);	extern int countunique(long **matrix, int notu, int nchar);	extern int countuniquechars(long **matrix, int notu, int nchars);	extern int *countcharreplicates(long **matrix, int notu, int nchar, int annchar);	extern int countuniqueulvector(unsigned long *, int);	extern double avedvector(double *v, int n);	extern void **multiplydmatrix(double **A, double **B, double **C, int r, int c);	extern double **mexp(double **Q, int k);	extern double *rankivector_dec(int *v, int n);	extern double *rankulvector_dec(unsigned long *v, int n);	extern double *rankdvector_dec(double *v, int n);	extern double *rankielements_dec(int *v, int n);	extern double *rankulelements_dec(unsigned long *v, int n);	extern double *rankdelements_dec(double *v, int n);#endif