/**********************************************************************************v0.0 - 2001.05.03 BY WRITTEN BY P.J.WAGNER III v0.1 - 2003.02.02	Initial routines written in 1996.	Includes routines to read trees from nexus Files and to extract information		about trees that are stored in memory as a long matrix.		Note that the format of the tree is:			tree[x][0]: number of taxa in clade x (with clade 0 the tree base)			tree[x][1]…tree[x][tree[x][0]]: number of taxon in the clade			taxa 0…(OTUs-1) are the sampled taxa			taxa OTUs…(OTUs+clades) are the cladesv0.2 - 2003.07.07	Added routine to name nodes.  v0.3 - 2004.12.07	Added Colless' tree symmetry routine.  ***********************************************************************************/#define memory#include "memory.h"#ifdef TreeRead	#include <stdlib.h>	#include <stdio.h>	#include <math.h>	long **nexustotree(char *, int);	long **nexusfiletotree(char *file);	int countotusinnexusfile (char *nexusfile);	int maxtaxoninnexusfile(char *nexusfile);	int *cladediversity(char *, int, int);	int cladecountnexus(char *);	int *patristicheight(long **tree, int clades, int notu);	long **patristicdistance(long **tree, int clades, int notu);	double **patristicdissimilarity(long **tree, long **chmatrix, int *BL, int clades, int notu, int nchars, int UNKNOWN, int INAP);	long **VennTree(long **tree, int clades, int notu, int maxsp);	long **VennTreePlus(long **tree, int clades, int notu, int maxsp);	long **VennTreetoTree(long **vtree, int notu, int maxsp, int clades);	long **VennTreePlusStrat(long **tree, int clades, int notu, int maxsp);	int **lastcommonancestormatrix(long **tree, int clades, int notu);	int **listancestors(long **tree, int clades, int notu);	int *listancestor(long **tree, int clades, int notu);	long **clademember(long **tree, int notu, int nodes);	int	cladecountbytaxa(long **tree, int notu);	int	cladecount(long **tree);	long **cladesinclades(long **tree, int clades, int notu);	int taxaintree(long **tree, int notu);	double treesymFould(long **tree, int notu);	double treesymColless(long **tree, int notu);	double treesymCollessVenn(long **tree, int notu);	char **nodenaming(long **tree, int clades, int notu, long *bl, char **taxonnames, int zed);	double *tree_draw (char *nexus, long ** tree, int notu, int clades);	double *tree_draw_anc (char *nexus, long ** tree, int notu, int clades, int *ancestral);	void ConvertTreeToBifurcating(long **tree, int notu);	void convertApeToNexus(long *ape, long **nexus, int notu, int nodes);	 #else	extern long **nexustotree(char *, int);	extern long **nexusfiletotree(char *file); 	extern int countotusinnexusfile (char *nexusfile);	extern int maxtaxoninnexusfile(char *nexusfile);	extern int *cladediversity(char *, int, int);	extern int cladecountnexus(char *);	extern int *patristicheight(long **tree, int clades, int notu);	extern long **patristicdistance(long **tree, int clades, int notu);	extern double **patristicdissimilarity(long **tree, long **chmatrix, int *BL, int clades, int notu, int nchars, int UNKNOWN, int INAP);	extern long **VennTree(long **tree, int clades, int notu, int maxsp);	extern long **VennTreePlus(long **tree, int clades, int notu, int maxsp);	extern long **VennTreePlusStrat(long **tree, int clades, int notu, int maxsp);	extern long **VennTreetoTree(long **vtree, int notu, int maxsp, int clades);	extern int **lastcommonancestormatrix(long **tree, int clades, int notu);	extern int **listancestors(long **tree, int clades, int notu);	extern int *listancestor(long **tree, int clades, int notu);	extern long **clademember(long **tree, int notu, int nodes);	extern int	cladecountbytaxa(long **tree, int notu);	extern int	cladecount(long **tree);	extern long **cladesinclades(long **tree, int clades, int notu);	extern int taxaintree(long **tree, int notu);	extern double treesymFould(long **tree, int notu);	extern double treesymCollessVenn(long **tree, int notu);	extern char **nodenaming(long **tree, int clades, int notu, long *bl, char **taxonnames, int zed);	extern double *tree_draw (char *nexus, long ** tree, int notu, int clades);	extern double *tree_draw_anc (char *nexus, long ** tree, int notu, int clades, int *ancestral);	extern void ConvertTreeToBifurcating(long **tree, int notu);	extern void convertApeToNexus(long *ape, long **nexus, int notu, int nodes);	#endif